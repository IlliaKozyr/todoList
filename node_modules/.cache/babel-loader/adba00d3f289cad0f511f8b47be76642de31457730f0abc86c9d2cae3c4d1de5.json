{"ast":null,"code":"var _jsxFileName = \"/Users/ilunya_kozyr/Desktop/TodoList/src/components/todoList/index.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './style.css';\nimport { observer } from \"mobx-react-lite\";\nimport { store } from \"../../store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoList = _s(observer(_c = _s((activeTodo, store) => {\n  var _todos;\n  _s();\n  // const { todos } = store;\n  const {\n    id\n  } = activeTodo;\n  const [complete, setComplete] = React.useState(\"\");\n  React.useEffect(() => {\n    completeFunc();\n  }, [(_todos = todos[id - 1]) === null || _todos === void 0 ? void 0 : _todos.completed]);\n  const completeFunc = () => {\n    var _todos2;\n    if ((_todos2 = todos[id - 1]) !== null && _todos2 !== void 0 && _todos2.completed) {\n      setComplete(true);\n    } else {\n      setComplete(false);\n    }\n  };\n  {\n    console.log(todos);\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"todoListBlock\",\n    children: Object.values(todos).map(todo => {\n      var _todo$title, _todo$description;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"todo\",\n        onClick: () => store.setTodo(todo),\n        children: [console.log(todo.completed), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"id\",\n          children: [\"#\", todo.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title\",\n          children: ((_todo$title = todo.title) === null || _todo$title === void 0 ? void 0 : _todo$title.length) >= 7 ? todo.title.slice(0, 7) + \"...\" : todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: ((_todo$description = todo.description) === null || _todo$description === void 0 ? void 0 : _todo$description.length) >= 7 ? todo.description.slice(0, 7) + \"...\" : todo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputBtnBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: todo.completed,\n            onChange: () => store.completeTodo(todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => store.removeTodo(todo.id - 1),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}, \"Ni3gQbhgk0R1SsGeacOVt/SUdLs=\")), \"Ni3gQbhgk0R1SsGeacOVt/SUdLs=\");\n_c2 = TodoList;\nvar _c, _c2;\n$RefreshReg$(_c, \"TodoList$observer\");\n$RefreshReg$(_c2, \"TodoList\");","map":{"version":3,"names":["React","observer","store","TodoList","activeTodo","id","complete","setComplete","useState","useEffect","completeFunc","todos","completed","console","log","Object","values","map","todo","setTodo","title","length","slice","description","completeTodo","removeTodo"],"sources":["/Users/ilunya_kozyr/Desktop/TodoList/src/components/todoList/index.jsx"],"sourcesContent":["import React from \"react\";\nimport './style.css'\nimport { observer } from \"mobx-react-lite\";\nimport { store } from \"../../store\";\n\nexport const TodoList = observer((activeTodo, store) => {\n\n    // const { todos } = store;\n    const { id } = activeTodo\n\n    const [complete, setComplete] = React.useState(\"\");\n\n    React.useEffect(() => {\n        completeFunc();\n    }, [todos[id - 1]?.completed]);\n\n    const completeFunc = () => {\n        if (todos[id - 1]?.completed) {\n            setComplete(true);\n        } else {\n            setComplete(false);\n        }\n    };\n\n    {console.log(todos)}\n\n    return (\n        <ul className=\"todoListBlock\">\n            {Object.values(todos).map((todo) => (\n                <li\n                    className=\"todo\"\n                    key={todo.id}\n                    onClick={() => store.setTodo(todo)}\n                >\n                    {console.log(todo.completed)}\n                    <p className=\"id\">#{todo.id}</p>\n                    <p className=\"title\">\n                        {todo.title?.length >= 7\n                            ? todo.title.slice(0, 7) + \"...\"\n                            : todo.title}\n                    </p>\n                    <p className=\"description\">\n                        {todo.description?.length >= 7\n                            ? todo.description.slice(0, 7) + \"...\"\n                            : todo.description}\n                    </p>\n                    <div className=\"inputBtnBlock\">\n                        <input\n                            type=\"checkbox\"\n                            checked={todo.completed}\n                            onChange={() => store.completeTodo(todo.id)}\n                        />\n                        <button\n                            onClick={() => (\n                                store.removeTodo(todo.id - 1)\n                            )}\n                        >\n                            x\n                        </button>\n                    </div>\n                </li>\n            ))}\n        </ul>\n    );\n});\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,KAAK,QAAQ,aAAa;AAAC;AAEpC,OAAO,MAAMC,QAAQ,MAAGF,QAAQ,SAAC,CAACG,UAAU,EAAEF,KAAK,KAAK;EAAA;EAAA;EAEpD;EACA,MAAM;IAAEG;EAAG,CAAC,GAAGD,UAAU;EAEzB,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAElDR,KAAK,CAACS,SAAS,CAAC,MAAM;IAClBC,YAAY,EAAE;EAClB,CAAC,EAAE,WAACC,KAAK,CAACN,EAAE,GAAG,CAAC,CAAC,2CAAb,OAAeO,SAAS,CAAC,CAAC;EAE9B,MAAMF,YAAY,GAAG,MAAM;IAAA;IACvB,eAAIC,KAAK,CAACN,EAAE,GAAG,CAAC,CAAC,oCAAb,QAAeO,SAAS,EAAE;MAC1BL,WAAW,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACHA,WAAW,CAAC,KAAK,CAAC;IACtB;EACJ,CAAC;EAED;IAACM,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EAAA;EAEnB,oBACI;IAAI,SAAS,EAAC,eAAe;IAAA,UACxBI,MAAM,CAACC,MAAM,CAACL,KAAK,CAAC,CAACM,GAAG,CAAEC,IAAI;MAAA;MAAA,oBAC3B;QACI,SAAS,EAAC,MAAM;QAEhB,OAAO,EAAE,MAAMhB,KAAK,CAACiB,OAAO,CAACD,IAAI,CAAE;QAAA,WAElCL,OAAO,CAACC,GAAG,CAACI,IAAI,CAACN,SAAS,CAAC,eAC5B;UAAG,SAAS,EAAC,IAAI;UAAA,gBAAGM,IAAI,CAACb,EAAE;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eAChC;UAAG,SAAS,EAAC,OAAO;UAAA,UACf,gBAAAa,IAAI,CAACE,KAAK,gDAAV,YAAYC,MAAM,KAAI,CAAC,GAClBH,IAAI,CAACE,KAAK,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,GAC9BJ,IAAI,CAACE;QAAK;UAAA;UAAA;UAAA;QAAA,QAChB,eACJ;UAAG,SAAS,EAAC,aAAa;UAAA,UACrB,sBAAAF,IAAI,CAACK,WAAW,sDAAhB,kBAAkBF,MAAM,KAAI,CAAC,GACxBH,IAAI,CAACK,WAAW,CAACD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,GACpCJ,IAAI,CAACK;QAAW;UAAA;UAAA;UAAA;QAAA,QACtB,eACJ;UAAK,SAAS,EAAC,eAAe;UAAA,wBAC1B;YACI,IAAI,EAAC,UAAU;YACf,OAAO,EAAEL,IAAI,CAACN,SAAU;YACxB,QAAQ,EAAE,MAAMV,KAAK,CAACsB,YAAY,CAACN,IAAI,CAACb,EAAE;UAAE;YAAA;YAAA;YAAA;UAAA,QAC9C,eACF;YACI,OAAO,EAAE,MACLH,KAAK,CAACuB,UAAU,CAACP,IAAI,CAACb,EAAE,GAAG,CAAC,CAC9B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAGG;QAAA;UAAA;UAAA;UAAA;QAAA,QACP;MAAA,GA5BDa,IAAI,CAACb,EAAE;QAAA;QAAA;QAAA;MAAA,QA6BX;IAAA,CACR;EAAC;IAAA;IAAA;IAAA;EAAA,QACD;AAEb,CAAC,kCAAC;AAAC,MA3DUF,QAAQ;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}