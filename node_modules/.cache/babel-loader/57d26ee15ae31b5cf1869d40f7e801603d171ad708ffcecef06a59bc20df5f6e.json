{"ast":null,"code":"var _jsxFileName = \"/Users/ilunya_kozyr/Desktop/TodoList/src/TodoList.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Inputs } from \"./components/inputs/inputs\";\nimport { ColumnNames } from \"./components/columnNames/columnNames\";\nimport { observer } from \"mobx-react-lite\";\nimport { CreateList } from \"./components/todoList/list.jsx\";\nimport { ModalWindow } from \"./components/modalWindow/modal\";\nimport todoListState from \"./store/todoListState\";\nimport SortingTodo from \"./components/sorting/sorting\";\nimport InputSearch from \"./components/search/inputSearch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoListApp = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    activeTask,\n    todos\n  } = todoListState;\n  const [arr] = React.useState(todos);\n  const [filtered, setFiltered] = React.useState([]);\n  React.useEffect(() => {\n    setFiltered(arr);\n  }, [arr]);\n  const search = val => {\n    //текущие задачи и новые отфильтрованные задачи\n    let todos = [],\n      newList = [];\n    if (val !== \"\") {\n      //делаем копию нашего стейта\n      todos = arr;\n      //фильтруем стейт в поисках совпадений\n      newList = todos.filter(todo => {\n        // значение которое пользователь ввел и которое у нас\n        // в стейте делаем строчными буквами чтобы конфликтов не было\n        // мало ли пользователь ввель строчными буквами а у нас заглавные\n        const lc = todo.title.toLowerCase();\n        const filter = val.toLowerCase();\n        // проверяем есть ли у нас этот элемент если есть возвращаем его\n        return lc.includes(filter);\n      });\n    } else {\n      // если в input ничего нету то есть пользователь стер то\n      // что ввел тогда возвращаем все задачи\n      newList = todos;\n    }\n    setFiltered(newList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listBlock\",\n      children: [/*#__PURE__*/_jsxDEV(Inputs, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sortSearchBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"df\",\n          children: [/*#__PURE__*/_jsxDEV(InputSearch, {\n            search\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SortingTodo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ColumnNames, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateList, {\n        arr: filtered\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fullDescriptionBlock\",\n      children: activeTask && /*#__PURE__*/_jsxDEV(ModalWindow, {\n        activeTask: activeTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}, \"JIYuWpLoHdxq9UoOoiLQx9sO4q4=\")), \"JIYuWpLoHdxq9UoOoiLQx9sO4q4=\");\n_c2 = TodoListApp;\nexport default TodoListApp;\nvar _c, _c2;\n$RefreshReg$(_c, \"TodoListApp$observer\");\n$RefreshReg$(_c2, \"TodoListApp\");","map":{"version":3,"names":["React","Inputs","ColumnNames","observer","CreateList","ModalWindow","todoListState","SortingTodo","InputSearch","TodoListApp","activeTask","todos","arr","useState","filtered","setFiltered","useEffect","search","val","newList","filter","todo","lc","title","toLowerCase","includes"],"sources":["/Users/ilunya_kozyr/Desktop/TodoList/src/TodoList.jsx"],"sourcesContent":["import React from \"react\";\nimport { Inputs } from \"./components/inputs/inputs\";\nimport { ColumnNames } from \"./components/columnNames/columnNames\";\nimport { observer } from \"mobx-react-lite\";\nimport { CreateList } from \"./components/todoList/list.jsx\";\nimport { ModalWindow } from \"./components/modalWindow/modal\";\nimport todoListState from \"./store/todoListState\";\nimport SortingTodo from \"./components/sorting/sorting\";\nimport InputSearch from \"./components/search/inputSearch\";\n\nconst TodoListApp = observer(() => {\n    const { activeTask, todos } = todoListState;\n\n    const [arr] = React.useState(todos);\n    const [filtered, setFiltered] = React.useState([]);\n\n    React.useEffect(\n        () => {\n            setFiltered(arr);\n        },\n        [arr]\n    );\n\n    const search = (val) => {\n        //текущие задачи и новые отфильтрованные задачи\n        let todos = [],\n            newList = [];\n        if (val !== \"\") {\n            //делаем копию нашего стейта\n            todos = arr;\n            //фильтруем стейт в поисках совпадений\n            newList = todos.filter((todo) => {\n                // значение которое пользователь ввел и которое у нас\n                // в стейте делаем строчными буквами чтобы конфликтов не было\n                // мало ли пользователь ввель строчными буквами а у нас заглавные\n                const lc = todo.title.toLowerCase();\n                const filter = val.toLowerCase();\n                // проверяем есть ли у нас этот элемент если есть возвращаем его\n                return lc.includes(filter);\n            });\n        } else {\n            // если в input ничего нету то есть пользователь стер то\n            // что ввел тогда возвращаем все задачи\n            newList = todos;\n        }\n        setFiltered(newList);\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"listBlock\">\n                <Inputs />\n                <div className=\"sortSearchBlock\">\n                    <div className=\"df\">\n                        <InputSearch {...{ search }}/>\n                        <SortingTodo />\n                    </div>\n                    <ColumnNames />\n                </div>\n\n                <CreateList arr={filtered}/>\n            </div>\n            <div className=\"fullDescriptionBlock\">\n                {activeTask && <ModalWindow activeTask={activeTask} />}\n            </div>\n        </div>\n    );\n});\n\nexport default TodoListApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,4BAA4B;AACnD,SAASC,WAAW,QAAQ,sCAAsC;AAClE,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,UAAU,QAAQ,gCAAgC;AAC3D,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,WAAW,MAAM,iCAAiC;AAAC;AAE1D,MAAMC,WAAW,MAAGN,QAAQ,SAAC,MAAM;EAAA;EAC/B,MAAM;IAAEO,UAAU;IAAEC;EAAM,CAAC,GAAGL,aAAa;EAE3C,MAAM,CAACM,GAAG,CAAC,GAAGZ,KAAK,CAACa,QAAQ,CAACF,KAAK,CAAC;EACnC,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGf,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;EAElDb,KAAK,CAACgB,SAAS,CACX,MAAM;IACFD,WAAW,CAACH,GAAG,CAAC;EACpB,CAAC,EACD,CAACA,GAAG,CAAC,CACR;EAED,MAAMK,MAAM,GAAIC,GAAG,IAAK;IACpB;IACA,IAAIP,KAAK,GAAG,EAAE;MACVQ,OAAO,GAAG,EAAE;IAChB,IAAID,GAAG,KAAK,EAAE,EAAE;MACZ;MACAP,KAAK,GAAGC,GAAG;MACX;MACAO,OAAO,GAAGR,KAAK,CAACS,MAAM,CAAEC,IAAI,IAAK;QAC7B;QACA;QACA;QACA,MAAMC,EAAE,GAAGD,IAAI,CAACE,KAAK,CAACC,WAAW,EAAE;QACnC,MAAMJ,MAAM,GAAGF,GAAG,CAACM,WAAW,EAAE;QAChC;QACA,OAAOF,EAAE,CAACG,QAAQ,CAACL,MAAM,CAAC;MAC9B,CAAC,CAAC;IACN,CAAC,MAAM;MACH;MACA;MACAD,OAAO,GAAGR,KAAK;IACnB;IACAI,WAAW,CAACI,OAAO,CAAC;EACxB,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,wBACtB;MAAK,SAAS,EAAC,WAAW;MAAA,wBACtB,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV;QAAK,SAAS,EAAC,iBAAiB;QAAA,wBAC5B;UAAK,SAAS,EAAC,IAAI;UAAA,wBACf,QAAC,WAAW;YAAOF;UAAM;YAAA;YAAA;YAAA;UAAA,QAAK,eAC9B,QAAC,WAAW;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QACb,eACN,QAAC,WAAW;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACb,eAEN,QAAC,UAAU;QAAC,GAAG,EAAEH;MAAS;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1B,eACN;MAAK,SAAS,EAAC,sBAAsB;MAAA,UAChCJ,UAAU,iBAAI,QAAC,WAAW;QAAC,UAAU,EAAEA;MAAW;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACpD;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC,kCAAC;AAAC,MAzDGD,WAAW;AA2DjB,eAAeA,WAAW;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}