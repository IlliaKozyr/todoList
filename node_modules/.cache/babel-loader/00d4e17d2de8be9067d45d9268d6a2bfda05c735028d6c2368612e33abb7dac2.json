{"ast":null,"code":"var _jsxFileName = \"/Users/ilunya_kozyr/Desktop/TodoList/src/components/todoList/index.jsx\";\nimport React from \"react\";\nimport './style.css';\nimport { observer } from \"mobx-react-lite\";\nimport { store } from \"../../store\";\n// import saveTodo from \"../../helpers/localStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoList = observer(_c = props => {\n  const {\n    todos,\n    setTodo\n  } = store;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"todoListBlock\",\n    children: todos === null || todos === void 0 ? void 0 : todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"todo\",\n      onClick: () => store.setTodo(index),\n      children: [console.log(todos), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"id\",\n        children: [\"#\", todo.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title\",\n        children: todo.title.length >= 7 ? todo.title.slice(0, 7) + \"...\" : todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"description\",\n        children: todo.description.length >= 7 ? todo.description.slice(0, 7) + \"...\" : todo.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputBtnBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.completed,\n          onChange: () => store.completeTodo(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => store.removeTodo(todo.id),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n});\n_c2 = TodoList;\nvar _c, _c2;\n$RefreshReg$(_c, \"TodoList$observer\");\n$RefreshReg$(_c2, \"TodoList\");","map":{"version":3,"names":["React","observer","store","TodoList","props","todos","setTodo","map","todo","index","console","log","id","title","length","slice","description","completed","completeTodo","removeTodo"],"sources":["/Users/ilunya_kozyr/Desktop/TodoList/src/components/todoList/index.jsx"],"sourcesContent":["import React from \"react\";\nimport './style.css'\nimport { observer } from \"mobx-react-lite\";\nimport { store } from \"../../store\";\n// import saveTodo from \"../../helpers/localStorage\";\n\nexport const TodoList = observer((props) => {\n    const { todos, setTodo } = store;\n\n    return (\n        <ul className=\"todoListBlock\">\n            {todos?.map((todo, index) => (\n                <li\n                    className=\"todo\"\n                    key={todo.id}\n                    onClick={() => store.setTodo(index)}\n                >\n                    {console.log(todos)}\n                    <p className=\"id\">#{todo.id}</p>\n                    <p className=\"title\">\n                        {todo.title.length >= 7\n                            ? todo.title.slice(0, 7) + \"...\"\n                            : todo.title}\n                    </p>\n                    <p className=\"description\">\n                        {todo.description.length >= 7\n                            ? todo.description.slice(0, 7) + \"...\"\n                            : todo.description}\n                    </p>\n                    <div className=\"inputBtnBlock\">\n                        <input\n                            type=\"checkbox\"\n                            checked={todo.completed}\n                            onChange={() => store.completeTodo(todo.id)}\n                        />\n                        <button\n                            onClick={() => (\n                                store.removeTodo(todo.id)\n                            )}\n                        >\n                            x\n                        </button>\n                    </div>\n                </li>\n            ))}\n        </ul>\n    );\n});\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,KAAK,QAAQ,aAAa;AACnC;AAAA;AAEA,OAAO,MAAMC,QAAQ,GAAGF,QAAQ,MAAEG,KAAK,IAAK;EACxC,MAAM;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGJ,KAAK;EAEhC,oBACI;IAAI,SAAS,EAAC,eAAe;IAAA,UACxBG,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpB;MACI,SAAS,EAAC,MAAM;MAEhB,OAAO,EAAE,MAAMP,KAAK,CAACI,OAAO,CAACG,KAAK,CAAE;MAAA,WAEnCC,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC,eACnB;QAAG,SAAS,EAAC,IAAI;QAAA,gBAAGG,IAAI,CAACI,EAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAChC;QAAG,SAAS,EAAC,OAAO;QAAA,UACfJ,IAAI,CAACK,KAAK,CAACC,MAAM,IAAI,CAAC,GACjBN,IAAI,CAACK,KAAK,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,GAC9BP,IAAI,CAACK;MAAK;QAAA;QAAA;QAAA;MAAA,QAChB,eACJ;QAAG,SAAS,EAAC,aAAa;QAAA,UACrBL,IAAI,CAACQ,WAAW,CAACF,MAAM,IAAI,CAAC,GACvBN,IAAI,CAACQ,WAAW,CAACD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,GACpCP,IAAI,CAACQ;MAAW;QAAA;QAAA;QAAA;MAAA,QACtB,eACJ;QAAK,SAAS,EAAC,eAAe;QAAA,wBAC1B;UACI,IAAI,EAAC,UAAU;UACf,OAAO,EAAER,IAAI,CAACS,SAAU;UACxB,QAAQ,EAAE,MAAMf,KAAK,CAACgB,YAAY,CAACV,IAAI,CAACI,EAAE;QAAE;UAAA;UAAA;UAAA;QAAA,QAC9C,eACF;UACI,OAAO,EAAE,MACLV,KAAK,CAACiB,UAAU,CAACX,IAAI,CAACI,EAAE,CAC1B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAGG;MAAA;QAAA;QAAA;QAAA;MAAA,QACP;IAAA,GA5BDJ,IAAI,CAACI,EAAE;MAAA;MAAA;MAAA;IAAA,QA8BnB;EAAC;IAAA;IAAA;IAAA;EAAA,QACD;AAEb,CAAC,CAAC;AAAC,MAzCUT,QAAQ;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}