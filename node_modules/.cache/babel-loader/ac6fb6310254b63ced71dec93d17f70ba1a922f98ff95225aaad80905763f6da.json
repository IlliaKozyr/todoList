{"ast":null,"code":"var _jsxFileName = \"/Users/ilunya_kozyr/Desktop/TodoList/src/components/modalWindow/index.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './style.css';\nimport { observer } from \"mobx-react-lite\";\nimport { store } from \"../../store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModalWindow = _s(observer(_c = _s(activeTodo => {\n  var _todos;\n  _s();\n  const {\n    title,\n    description,\n    id,\n    completed\n  } = activeTodo.activeTodo;\n  const {\n    todos\n  } = store;\n  const [complete, setComplete] = React.useState(\"\");\n  React.useEffect(() => {\n    completeFunc();\n  }, [(_todos = todos[id - 1]) === null || _todos === void 0 ? void 0 : _todos.completed]);\n  const completeFunc = () => {\n    var _todos2;\n    if ((_todos2 = todos[id - 1]) !== null && _todos2 !== void 0 && _todos2.completed) {\n      setComplete(true);\n    } else {\n      setComplete(false);\n    }\n  };\n  const modalRemove = () => {\n    if (Object.keys(todos).length === 0) {\n      store.setTodo(null);\n      document.getElementById(\"modalWindowsBlock\").style.display = \"none\";\n    } else {\n      document.getElementById(\"modalWindowsBlock\").style.display = \"block\";\n    }\n  };\n  React.useEffect(() => {\n    modalRemove();\n  }, [store.activeTodo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modalWindowsBlock\",\n    id: \"modalWindowsBlock\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"todoTitle\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"df descriptionBlock\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"gray setting\",\n        children: \"description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"setting\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dflex\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"gray\",\n        children: \"status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: complete ? \"done\" : \"not ready\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btnBlock\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btnClose\",\n        onClick: () => store.setTodo(null),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}, \"2umIG/WDlO0wyiVxc7tr9C9cQFM=\")), \"2umIG/WDlO0wyiVxc7tr9C9cQFM=\");\n_c2 = ModalWindow;\nvar _c, _c2;\n$RefreshReg$(_c, \"ModalWindow$observer\");\n$RefreshReg$(_c2, \"ModalWindow\");","map":{"version":3,"names":["React","observer","store","ModalWindow","activeTodo","title","description","id","completed","todos","complete","setComplete","useState","useEffect","completeFunc","modalRemove","Object","keys","length","setTodo","document","getElementById","style","display"],"sources":["/Users/ilunya_kozyr/Desktop/TodoList/src/components/modalWindow/index.jsx"],"sourcesContent":["import React from \"react\";\nimport './style.css'\nimport { observer } from \"mobx-react-lite\";\nimport { store } from \"../../store\";\n\nexport const ModalWindow = observer((activeTodo) => {\n\n    const { title, description, id, completed } = activeTodo.activeTodo;\n    const { todos } = store;\n    const [complete, setComplete] = React.useState(\"\");\n\n    React.useEffect(() => {\n        completeFunc();\n    }, [todos[id - 1]?.completed]);\n\n    const completeFunc = () => {\n        if (todos[id - 1]?.completed) {\n            setComplete(true);\n        } else {\n            setComplete(false);\n        }\n    };\n\n    const modalRemove = () => {\n        if(Object.keys(todos).length === 0) {\n            store.setTodo(null)\n            document.getElementById(\"modalWindowsBlock\").style.display = \"none\"\n        } else {\n            document.getElementById(\"modalWindowsBlock\").style.display = \"block\"\n        }\n    }\n\n    React.useEffect(() => {\n        modalRemove()\n    }, [store.activeTodo])\n\n\n    return (\n        <div className=\"modalWindowsBlock\" id=\"modalWindowsBlock\">\n            <p className=\"todoTitle\">{title}</p>\n            <div className=\"df descriptionBlock\">\n                <p className=\"gray setting\">description:</p>\n                <p className=\"setting\">{description}</p>\n            </div>\n            <div className=\"dflex\">\n                <p className=\"gray\">status:</p>\n                <p>{complete ? \"done\" : \"not ready\"}</p>\n            </div>\n            <div className=\"btnBlock\">\n                <button\n                    className=\"btnClose\"\n                    onClick={() => (store.setTodo(null))}\n                >\n                    Close\n                </button>\n            </div>\n        </div>\n    );\n});\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,KAAK,QAAQ,aAAa;AAAC;AAEpC,OAAO,MAAMC,WAAW,MAAGF,QAAQ,SAAEG,UAAU,IAAK;EAAA;EAAA;EAEhD,MAAM;IAAEC,KAAK;IAAEC,WAAW;IAAEC,EAAE;IAAEC;EAAU,CAAC,GAAGJ,UAAU,CAACA,UAAU;EACnE,MAAM;IAAEK;EAAM,CAAC,GAAGP,KAAK;EACvB,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;EAElDZ,KAAK,CAACa,SAAS,CAAC,MAAM;IAClBC,YAAY,EAAE;EAClB,CAAC,EAAE,WAACL,KAAK,CAACF,EAAE,GAAG,CAAC,CAAC,2CAAb,OAAeC,SAAS,CAAC,CAAC;EAE9B,MAAMM,YAAY,GAAG,MAAM;IAAA;IACvB,eAAIL,KAAK,CAACF,EAAE,GAAG,CAAC,CAAC,oCAAb,QAAeC,SAAS,EAAE;MAC1BG,WAAW,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACHA,WAAW,CAAC,KAAK,CAAC;IACtB;EACJ,CAAC;EAED,MAAMI,WAAW,GAAG,MAAM;IACtB,IAAGC,MAAM,CAACC,IAAI,CAACR,KAAK,CAAC,CAACS,MAAM,KAAK,CAAC,EAAE;MAChChB,KAAK,CAACiB,OAAO,CAAC,IAAI,CAAC;MACnBC,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;IACvE,CAAC,MAAM;MACHH,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,OAAO;IACxE;EACJ,CAAC;EAEDvB,KAAK,CAACa,SAAS,CAAC,MAAM;IAClBE,WAAW,EAAE;EACjB,CAAC,EAAE,CAACb,KAAK,CAACE,UAAU,CAAC,CAAC;EAGtB,oBACI;IAAK,SAAS,EAAC,mBAAmB;IAAC,EAAE,EAAC,mBAAmB;IAAA,wBACrD;MAAG,SAAS,EAAC,WAAW;MAAA,UAAEC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,eACpC;MAAK,SAAS,EAAC,qBAAqB;MAAA,wBAChC;QAAG,SAAS,EAAC,cAAc;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eAC5C;QAAG,SAAS,EAAC,SAAS;QAAA,UAAEC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACtC,eACN;MAAK,SAAS,EAAC,OAAO;MAAA,wBAClB;QAAG,SAAS,EAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAY,eAC/B;QAAA,UAAII,QAAQ,GAAG,MAAM,GAAG;MAAW;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACtC,eACN;MAAK,SAAS,EAAC,UAAU;MAAA,uBACrB;QACI,SAAS,EAAC,UAAU;QACpB,OAAO,EAAE,MAAOR,KAAK,CAACiB,OAAO,CAAC,IAAI,CAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAGhC;MAAA;MAAA;MAAA;IAAA,QACP;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC,kCAAC;AAAC,MArDUhB,WAAW;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}