{"ast":null,"code":"var _jsxFileName = \"/Users/ilunya_kozyr/Desktop/TodoList/src/components/modalWindow/modal.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./modalStyle.css\";\nimport { observer } from \"mobx-react-lite\";\nimport todoListState from \"../../store/todoListState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModalWindow = _s(observer(_c = _s(activeTask => {\n  _s();\n  const {\n    title,\n    description,\n    completed,\n    id\n  } = activeTask.activeTask;\n  const {\n    todos\n  } = todoListState;\n  const [complete, setComplete] = React.useState(completed);\n  React.useEffect(() => {\n    completeFunc();\n  }, [complete]);\n  let a = \"not ready\";\n  const completeFunc = () => {\n    if (completed) {\n      console.log(completed, complete);\n      setComplete(true);\n    } else {\n      console.log(completed, complete);\n      return a = \" not ready\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modalWindowsBlock\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"todoTitle\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"df descriptionBlock\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"gray setting\",\n        children: \"description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"setting\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dflex\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"gray\",\n        children: \"status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: complete ? \"done\" : \"not ready\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btnBlock\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btnClose\",\n        onClick: () => todoListState.setTodo(null),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}, \"hsxzqyK9KlMBefN0vFmspu3ttnY=\")), \"hsxzqyK9KlMBefN0vFmspu3ttnY=\");\n_c2 = ModalWindow;\nvar _c, _c2;\n$RefreshReg$(_c, \"ModalWindow$observer\");\n$RefreshReg$(_c2, \"ModalWindow\");","map":{"version":3,"names":["React","observer","todoListState","ModalWindow","activeTask","title","description","completed","id","todos","complete","setComplete","useState","useEffect","completeFunc","a","console","log","setTodo"],"sources":["/Users/ilunya_kozyr/Desktop/TodoList/src/components/modalWindow/modal.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./modalStyle.css\";\nimport { observer } from \"mobx-react-lite\";\nimport todoListState from \"../../store/todoListState\";\n\nexport const ModalWindow = observer((activeTask) => {\n    const { title, description, completed, id } = activeTask.activeTask;\n\n    const { todos } = todoListState;\n\n    const [complete, setComplete] = React.useState(completed)\n\n    React.useEffect(() => {\n        completeFunc()\n    }, [complete]);\n\n    let a = \"not ready\"\n\n    const completeFunc = () => {\n        if (completed) {\n            console.log(completed, complete)\n            setComplete(true)\n            \n        } else {\n            console.log(completed, complete)\n            return a = \" not ready\";\n            \n        }\n    }\n\n    return (\n        <div className=\"modalWindowsBlock\">\n            <p className=\"todoTitle\">{title}</p>\n            <div className=\"df descriptionBlock\">\n                <p className=\"gray setting\">description:</p>\n                <p className=\"setting\">{description}</p>\n            </div>\n            <div className=\"dflex\">\n                <p className=\"gray\">status:</p>\n                <p>{complete ? \"done\" : \"not ready\"}</p>\n                {/* completed ? \"done\" : \"not ready\" */}\n            </div>\n            <div className=\"btnBlock\">\n                <button\n                    className=\"btnClose\"\n                    onClick={() => todoListState.setTodo(null)}\n                >\n                    Close\n                </button>\n            </div>\n        </div>\n    );\n});\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AACzB,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,aAAa,MAAM,2BAA2B;AAAC;AAEtD,OAAO,MAAMC,WAAW,MAAGF,QAAQ,SAAEG,UAAU,IAAK;EAAA;EAChD,MAAM;IAAEC,KAAK;IAAEC,WAAW;IAAEC,SAAS;IAAEC;EAAG,CAAC,GAAGJ,UAAU,CAACA,UAAU;EAEnE,MAAM;IAAEK;EAAM,CAAC,GAAGP,aAAa;EAE/B,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAACL,SAAS,CAAC;EAEzDP,KAAK,CAACa,SAAS,CAAC,MAAM;IAClBC,YAAY,EAAE;EAClB,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,IAAIK,CAAC,GAAG,WAAW;EAEnB,MAAMD,YAAY,GAAG,MAAM;IACvB,IAAIP,SAAS,EAAE;MACXS,OAAO,CAACC,GAAG,CAACV,SAAS,EAAEG,QAAQ,CAAC;MAChCC,WAAW,CAAC,IAAI,CAAC;IAErB,CAAC,MAAM;MACHK,OAAO,CAACC,GAAG,CAACV,SAAS,EAAEG,QAAQ,CAAC;MAChC,OAAOK,CAAC,GAAG,YAAY;IAE3B;EACJ,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,mBAAmB;IAAA,wBAC9B;MAAG,SAAS,EAAC,WAAW;MAAA,UAAEV;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,eACpC;MAAK,SAAS,EAAC,qBAAqB;MAAA,wBAChC;QAAG,SAAS,EAAC,cAAc;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eAC5C;QAAG,SAAS,EAAC,SAAS;QAAA,UAAEC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACtC,eACN;MAAK,SAAS,EAAC,OAAO;MAAA,wBAClB;QAAG,SAAS,EAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAY,eAC/B;QAAA,UAAII,QAAQ,GAAG,MAAM,GAAG;MAAW;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAEtC,eACN;MAAK,SAAS,EAAC,UAAU;MAAA,uBACrB;QACI,SAAS,EAAC,UAAU;QACpB,OAAO,EAAE,MAAMR,aAAa,CAACgB,OAAO,CAAC,IAAI,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAGtC;MAAA;MAAA;MAAA;IAAA,QACP;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC,kCAAC;AAAC,MA/CUf,WAAW;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}