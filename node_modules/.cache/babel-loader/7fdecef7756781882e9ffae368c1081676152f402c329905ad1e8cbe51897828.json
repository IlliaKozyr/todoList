{"ast":null,"code":"var _jsxFileName = \"/Users/ilunya_kozyr/Desktop/TodoList/src/TodoList.jsx\",\n  _s = $RefreshSig$();\nimport { Inputs } from \"./components/inputs/inputs\";\nimport { ColumnNames } from \"./components/columnNames/columnNames\";\nimport { observer } from \"mobx-react-lite\";\nimport { CreateList } from \"./components/todoList/list.jsx\";\nimport { ModalWindow } from \"./components/modalWindow/modal\";\nimport todoListState from \"./store/todoListState\";\nimport SortingTodo from \"./components/sorting/sorting\";\nimport InputSearch from \"./components/search/inputSearch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoListApp = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    activeTask\n  } = todoListState;\n  const [todos] = useState(initialArr);\n  const [filtered, setFiltered] = useState([]);\n  useEffect(_ => {\n    setFiltered(todos);\n  }, [todos]);\n  const search = val => {\n    //текущие задачи и новые отфильтрованные задачи\n    let currentTodos = [],\n      newList = [];\n    if (val !== \"\") {\n      //делаем копию нашего стейта\n      currentTodos = todos;\n      //фильтруем стейт в поисках совпадений\n      newList = currentTodos.filter(todo => {\n        // значение которое пользователь ввел и которое у нас\n        // в стейте делаем строчными буквами чтобы конфликтов не было\n        // мало ли пользователь ввель строчными буквами а у нас заглавные\n        const lc = todo.task.toLowerCase();\n        const filter = val.toLowerCase();\n        // проверяем есть ли у нас этот элемент если есть возвращаем его\n        return lc.includes(filter);\n      });\n    } else {\n      // если в input ничего нету то есть пользователь стер то\n      // что ввел тогда возвращаем все задачи\n      newList = todos;\n    }\n    setFiltered(newList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listBlock\",\n      children: [/*#__PURE__*/_jsxDEV(Inputs, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sortSearchBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"df\",\n          children: [/*#__PURE__*/_jsxDEV(InputSearch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SortingTodo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ColumnNames, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fullDescriptionBlock\",\n      children: activeTask && /*#__PURE__*/_jsxDEV(ModalWindow, {\n        activeTask: activeTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}, \"T6QgHjNjSCNoGG1tgD6Aarobu90=\")), \"T6QgHjNjSCNoGG1tgD6Aarobu90=\");\n_c2 = TodoListApp;\nexport default TodoListApp;\nvar _c, _c2;\n$RefreshReg$(_c, \"TodoListApp$observer\");\n$RefreshReg$(_c2, \"TodoListApp\");","map":{"version":3,"names":["Inputs","ColumnNames","observer","CreateList","ModalWindow","todoListState","SortingTodo","InputSearch","TodoListApp","activeTask","todos","useState","initialArr","filtered","setFiltered","useEffect","_","search","val","currentTodos","newList","filter","todo","lc","task","toLowerCase","includes"],"sources":["/Users/ilunya_kozyr/Desktop/TodoList/src/TodoList.jsx"],"sourcesContent":["import { Inputs } from \"./components/inputs/inputs\";\nimport { ColumnNames } from \"./components/columnNames/columnNames\";\nimport { observer } from \"mobx-react-lite\";\nimport { CreateList } from \"./components/todoList/list.jsx\";\nimport { ModalWindow } from \"./components/modalWindow/modal\";\nimport todoListState from \"./store/todoListState\";\nimport SortingTodo from \"./components/sorting/sorting\";\nimport InputSearch from \"./components/search/inputSearch\";\n\nconst TodoListApp = observer(() => {\n    const { activeTask } = todoListState;\n\n    const [todos] = useState(initialArr);\n    const [filtered, setFiltered] = useState([]);\n\n    useEffect(\n        (_) => {\n            setFiltered(todos);\n        },\n        [todos]\n    );\n\n    const search = (val) => {\n        //текущие задачи и новые отфильтрованные задачи\n        let currentTodos = [],\n            newList = [];\n        if (val !== \"\") {\n            //делаем копию нашего стейта\n            currentTodos = todos;\n            //фильтруем стейт в поисках совпадений\n            newList = currentTodos.filter((todo) => {\n                // значение которое пользователь ввел и которое у нас\n                // в стейте делаем строчными буквами чтобы конфликтов не было\n                // мало ли пользователь ввель строчными буквами а у нас заглавные\n                const lc = todo.task.toLowerCase();\n                const filter = val.toLowerCase();\n                // проверяем есть ли у нас этот элемент если есть возвращаем его\n                return lc.includes(filter);\n            });\n        } else {\n            // если в input ничего нету то есть пользователь стер то\n            // что ввел тогда возвращаем все задачи\n            newList = todos;\n        }\n        setFiltered(newList);\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"listBlock\">\n                <Inputs />\n                <div className=\"sortSearchBlock\">\n                    <div className=\"df\">\n                        <InputSearch />\n                        <SortingTodo />\n                    </div>\n                    <ColumnNames />\n                </div>\n\n                <CreateList />\n            </div>\n            <div className=\"fullDescriptionBlock\">\n                {activeTask && <ModalWindow activeTask={activeTask} />}\n            </div>\n        </div>\n    );\n});\n\nexport default TodoListApp;\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,4BAA4B;AACnD,SAASC,WAAW,QAAQ,sCAAsC;AAClE,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,UAAU,QAAQ,gCAAgC;AAC3D,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,WAAW,MAAM,iCAAiC;AAAC;AAE1D,MAAMC,WAAW,MAAGN,QAAQ,SAAC,MAAM;EAAA;EAC/B,MAAM;IAAEO;EAAW,CAAC,GAAGJ,aAAa;EAEpC,MAAM,CAACK,KAAK,CAAC,GAAGC,QAAQ,CAACC,UAAU,CAAC;EACpC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAE5CI,SAAS,CACJC,CAAC,IAAK;IACHF,WAAW,CAACJ,KAAK,CAAC;EACtB,CAAC,EACD,CAACA,KAAK,CAAC,CACV;EAED,MAAMO,MAAM,GAAIC,GAAG,IAAK;IACpB;IACA,IAAIC,YAAY,GAAG,EAAE;MACjBC,OAAO,GAAG,EAAE;IAChB,IAAIF,GAAG,KAAK,EAAE,EAAE;MACZ;MACAC,YAAY,GAAGT,KAAK;MACpB;MACAU,OAAO,GAAGD,YAAY,CAACE,MAAM,CAAEC,IAAI,IAAK;QACpC;QACA;QACA;QACA,MAAMC,EAAE,GAAGD,IAAI,CAACE,IAAI,CAACC,WAAW,EAAE;QAClC,MAAMJ,MAAM,GAAGH,GAAG,CAACO,WAAW,EAAE;QAChC;QACA,OAAOF,EAAE,CAACG,QAAQ,CAACL,MAAM,CAAC;MAC9B,CAAC,CAAC;IACN,CAAC,MAAM;MACH;MACA;MACAD,OAAO,GAAGV,KAAK;IACnB;IACAI,WAAW,CAACM,OAAO,CAAC;EACxB,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,wBACtB;MAAK,SAAS,EAAC,WAAW;MAAA,wBACtB,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV;QAAK,SAAS,EAAC,iBAAiB;QAAA,wBAC5B;UAAK,SAAS,EAAC,IAAI;UAAA,wBACf,QAAC,WAAW;YAAA;YAAA;YAAA;UAAA,QAAG,eACf,QAAC,WAAW;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QACb,eACN,QAAC,WAAW;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACb,eAEN,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACZ,eACN;MAAK,SAAS,EAAC,sBAAsB;MAAA,UAChCX,UAAU,iBAAI,QAAC,WAAW;QAAC,UAAU,EAAEA;MAAW;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACpD;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC,kCAAC;AAAC,MAzDGD,WAAW;AA2DjB,eAAeA,WAAW;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}