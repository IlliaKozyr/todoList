{"ast":null,"code":"var _jsxFileName = \"/Users/ilunya_kozyr/Desktop/TodoList/src/components/modalWindow/modal.jsx\",\n  _s = $RefreshSig$();\nimport \"./modalStyle.css\";\nimport { observer } from \"mobx-react-lite\";\nimport todoListState from \"../../store/todoListState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModalWindow = _s(observer(_c = _s(activeTask => {\n  _s();\n  const {\n    title,\n    description,\n    completed\n  } = activeTask.activeTask;\n  React.useEffect(() => {\n    () => done();\n  }, [completed]);\n  const done = () => {\n    if (completed) {\n      return \"done\";\n    } else {\n      return \"not ready\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modalWindowsBlock\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"todoTitle\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"df descriptionBlock\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"gray setting\",\n        children: \"description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"setting\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dflex\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"gray\",\n        children: \"status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: completed ? \"done\" : \"not ready\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btnBlock\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btnClose\",\n        onClick: () => todoListState.setTodo(null),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = ModalWindow;\nvar _c, _c2;\n$RefreshReg$(_c, \"ModalWindow$observer\");\n$RefreshReg$(_c2, \"ModalWindow\");","map":{"version":3,"names":["observer","todoListState","ModalWindow","activeTask","title","description","completed","React","useEffect","done","setTodo"],"sources":["/Users/ilunya_kozyr/Desktop/TodoList/src/components/modalWindow/modal.jsx"],"sourcesContent":["import \"./modalStyle.css\";\nimport { observer } from \"mobx-react-lite\";\nimport todoListState from \"../../store/todoListState\";\n\nexport const ModalWindow = observer((activeTask) => {\n    const { title, description, completed } = activeTask.activeTask;\n\n    React.useEffect(() => {\n        () => done();\n    }, [completed]);\n\n    const done = () => {\n        if (completed) {\n            return \"done\";\n        } else {\n            return \"not ready\";\n        }\n    };\n\n    return (\n        <div className=\"modalWindowsBlock\">\n            <p className=\"todoTitle\">{title}</p>\n            <div className=\"df descriptionBlock\">\n                <p className=\"gray setting\">description:</p>\n                <p className=\"setting\">{description}</p>\n            </div>\n            <div className=\"dflex\">\n                <p className=\"gray\">status:</p>\n                <p>{completed ? \"done\" : \"not ready\"}</p>\n            </div>\n            <div className=\"btnBlock\">\n                <button\n                    className=\"btnClose\"\n                    onClick={() => todoListState.setTodo(null)}\n                >\n                    Close\n                </button>\n            </div>\n        </div>\n    );\n});\n"],"mappings":";;AAAA,OAAO,kBAAkB;AACzB,SAASA,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,aAAa,MAAM,2BAA2B;AAAC;AAEtD,OAAO,MAAMC,WAAW,MAAGF,QAAQ,SAAEG,UAAU,IAAK;EAAA;EAChD,MAAM;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAU,CAAC,GAAGH,UAAU,CAACA,UAAU;EAE/DI,KAAK,CAACC,SAAS,CAAC,MAAM;IAClB,MAAMC,IAAI,EAAE;EAChB,CAAC,EAAE,CAACH,SAAS,CAAC,CAAC;EAEf,MAAMG,IAAI,GAAG,MAAM;IACf,IAAIH,SAAS,EAAE;MACX,OAAO,MAAM;IACjB,CAAC,MAAM;MACH,OAAO,WAAW;IACtB;EACJ,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,mBAAmB;IAAA,wBAC9B;MAAG,SAAS,EAAC,WAAW;MAAA,UAAEF;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,eACpC;MAAK,SAAS,EAAC,qBAAqB;MAAA,wBAChC;QAAG,SAAS,EAAC,cAAc;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eAC5C;QAAG,SAAS,EAAC,SAAS;QAAA,UAAEC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACtC,eACN;MAAK,SAAS,EAAC,OAAO;MAAA,wBAClB;QAAG,SAAS,EAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAY,eAC/B;QAAA,UAAIC,SAAS,GAAG,MAAM,GAAG;MAAW;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACvC,eACN;MAAK,SAAS,EAAC,UAAU;MAAA,uBACrB;QACI,SAAS,EAAC,UAAU;QACpB,OAAO,EAAE,MAAML,aAAa,CAACS,OAAO,CAAC,IAAI,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAGtC;MAAA;MAAA;MAAA;IAAA,QACP;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC,kCAAC;AAAC,MApCUR,WAAW;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}