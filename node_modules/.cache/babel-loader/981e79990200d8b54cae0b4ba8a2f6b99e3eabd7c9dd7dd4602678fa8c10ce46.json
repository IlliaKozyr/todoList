{"ast":null,"code":"var _jsxFileName = \"/Users/ilunya_kozyr/Desktop/TodoList/src/components/inputs/index.jsx\",\n  _s = $RefreshSig$();\nimport \"./style.css\";\nimport Store from \"../../store\";\nimport React from \"react\";\nimport { observer } from \"mobx-react-lite\";\n// import saveTodo from \"../../helpers/localStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconsole.log(Store.todos);\nexport const Inputs = _s(observer(_c = _s(() => {\n  _s();\n  const [valueTitle, setValueTitle] = React.useState(\"\");\n  const [valueDescription, setValueDescription] = React.useState(\"\");\n  function CreateArray(title, description) {\n    {\n      var _Store$todos;\n      this.id = ((_Store$todos = Store.todos) === null || _Store$todos === void 0 ? void 0 : _Store$todos.length) + 1;\n      this.title = title;\n      this.description = description;\n      this.completed = false;\n    }\n  }\n  const createArray = new CreateArray(valueTitle, valueDescription);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputsBlock\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: valueTitle,\n          id: \"title\",\n          onChange: event => setValueTitle(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: valueDescription,\n          id: \"description\",\n          onChange: event => setValueDescription(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: () => (Store.addTodo(createArray), setValueTitle(\"\"), setValueDescription(\"\")),\n      disabled: valueTitle.length === 0 || valueDescription.length === 0,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"7LDnUhCpfaof1BGvEaaVPI6qgBo=\")), \"7LDnUhCpfaof1BGvEaaVPI6qgBo=\");\n_c2 = Inputs;\nvar _c, _c2;\n$RefreshReg$(_c, \"Inputs$observer\");\n$RefreshReg$(_c2, \"Inputs\");","map":{"version":3,"names":["Store","React","observer","console","log","todos","Inputs","valueTitle","setValueTitle","useState","valueDescription","setValueDescription","CreateArray","title","description","id","length","completed","createArray","event","target","value","addTodo"],"sources":["/Users/ilunya_kozyr/Desktop/TodoList/src/components/inputs/index.jsx"],"sourcesContent":["import \"./style.css\";\nimport Store from \"../../store\";\nimport React from \"react\";\nimport { observer } from \"mobx-react-lite\";\n// import saveTodo from \"../../helpers/localStorage\";\n\nconsole.log(Store.todos)\n\nexport const Inputs = observer(() => {\n    const [valueTitle, setValueTitle] = React.useState(\"\");\n    const [valueDescription, setValueDescription] = React.useState(\"\");\n\n    function CreateArray(title, description) {\n        {\n            this.id = Store.todos?.length + 1;\n            this.title = title;\n            this.description = description;\n            this.completed = false;\n        }\n    }\n\n    const createArray = new CreateArray(valueTitle, valueDescription);\n\n    return (\n        <>\n            <div className=\"inputsBlock\">\n                <div className=\"inputBlock\">\n                    <label className=\"label\">title</label>\n                    <input\n                        type=\"text\"\n                        value={valueTitle}\n                        id=\"title\"\n                        onChange={(event) => setValueTitle(event.target.value)}\n                    />\n                </div>\n\n                <div className=\"inputBlock\">\n                    <label className=\"label\">description</label>\n                    <input\n                        type=\"text\"\n                        value={valueDescription}\n                        id=\"description\"\n                        onChange={(event) =>\n                            setValueDescription(event.target.value)\n                        }\n                    />\n                </div>\n            </div>\n            <button\n                className=\"button\"\n                onClick={() => (\n                    Store.addTodo(createArray),\n                    setValueTitle(\"\"),\n                    setValueDescription(\"\")\n                )}\n                disabled={\n                    valueTitle.length === 0 || valueDescription.length === 0\n                }\n            >\n                Create\n            </button>\n        </>\n    );\n});\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,OAAOA,KAAK,MAAM,aAAa;AAC/B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C;AAAA;AAAA;AAEAC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACK,KAAK,CAAC;AAExB,OAAO,MAAMC,MAAM,MAAGJ,QAAQ,SAAC,MAAM;EAAA;EACjC,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAElE,SAASG,WAAW,CAACC,KAAK,EAAEC,WAAW,EAAE;IACrC;MAAA;MACI,IAAI,CAACC,EAAE,GAAG,iBAAAf,KAAK,CAACK,KAAK,iDAAX,aAAaW,MAAM,IAAG,CAAC;MACjC,IAAI,CAACH,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACC,WAAW,GAAGA,WAAW;MAC9B,IAAI,CAACG,SAAS,GAAG,KAAK;IAC1B;EACJ;EAEA,MAAMC,WAAW,GAAG,IAAIN,WAAW,CAACL,UAAU,EAAEG,gBAAgB,CAAC;EAEjE,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,aAAa;MAAA,wBACxB;QAAK,SAAS,EAAC,YAAY;QAAA,wBACvB;UAAO,SAAS,EAAC,OAAO;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc,eACtC;UACI,IAAI,EAAC,MAAM;UACX,KAAK,EAAEH,UAAW;UAClB,EAAE,EAAC,OAAO;UACV,QAAQ,EAAGY,KAAK,IAAKX,aAAa,CAACW,KAAK,CAACC,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QACzD;MAAA;QAAA;QAAA;QAAA;MAAA,QACA,eAEN;QAAK,SAAS,EAAC,YAAY;QAAA,wBACvB;UAAO,SAAS,EAAC,OAAO;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAoB,eAC5C;UACI,IAAI,EAAC,MAAM;UACX,KAAK,EAAEX,gBAAiB;UACxB,EAAE,EAAC,aAAa;UAChB,QAAQ,EAAGS,KAAK,IACZR,mBAAmB,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK;QACzC;UAAA;UAAA;UAAA;QAAA,QACH;MAAA;QAAA;QAAA;QAAA;MAAA,QACA;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MACI,SAAS,EAAC,QAAQ;MAClB,OAAO,EAAE,OACLrB,KAAK,CAACsB,OAAO,CAACJ,WAAW,CAAC,EAC1BV,aAAa,CAAC,EAAE,CAAC,EACjBG,mBAAmB,CAAC,EAAE,CAAC,CACzB;MACF,QAAQ,EACJJ,UAAU,CAACS,MAAM,KAAK,CAAC,IAAIN,gBAAgB,CAACM,MAAM,KAAK,CAC1D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGI;EAAA,gBACV;AAEX,CAAC,kCAAC;AAAC,MAvDUV,MAAM;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}