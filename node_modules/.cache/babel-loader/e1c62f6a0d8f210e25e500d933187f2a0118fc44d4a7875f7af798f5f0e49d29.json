{"ast":null,"code":"var _jsxFileName = \"/Users/ilunya_kozyr/Desktop/TodoList/src/TodoList.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Inputs } from \"./components/inputs/inputs\";\nimport { ColumnNames } from \"./components/columnNames/columnNames\";\nimport { observer } from \"mobx-react-lite\";\nimport { CreateList } from \"./components/todoList/list.jsx\";\nimport { ModalWindow } from \"./components/modalWindow/modal\";\nimport todoListState from \"./store/todoListState\";\nimport SortingTodo from \"./components/sorting/sorting\";\nimport InputSearch from \"./components/search/inputSearch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoListApp = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    activeTask,\n    todos\n  } = todoListState;\n  React.useEffect(() => {\n    const raw = localStorage.getItem('todos') || [];\n    setTodos(JSON.parse(raw));\n  }, []);\n  React.useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  // const [arr] = React.useState(todos);\n  // const [filtered, setFiltered] = React.useState([]);\n\n  // React.useEffect(() => {\n  //     setFiltered(arr);\n  // }, [arr]);\n\n  // const search = (val) => {\n  //     let todos = [],\n  //         newList = [];\n  //     if (val !== \"\") {\n  //         todos = arr;\n  //         newList = todos.filter((todo) => {\n  //             const lc = todo.title.toLowerCase();\n  //             const filter = val.toLowerCase();\n  //             return lc.includes(filter);\n  //         });\n  //     } else {\n  //         newList = arr;\n  //     }\n  //     setFiltered(newList);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listBlock\",\n      children: [/*#__PURE__*/_jsxDEV(Inputs, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sortSearchBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"df\",\n          children: [/*#__PURE__*/_jsxDEV(InputSearch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SortingTodo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ColumnNames, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fullDescriptionBlock\",\n      children: activeTask && /*#__PURE__*/_jsxDEV(ModalWindow, {\n        activeTask: activeTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}, \"3ubReDTFssvu4DHeldAg55cW/CI=\")), \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n_c2 = TodoListApp;\nexport default TodoListApp;\nvar _c, _c2;\n$RefreshReg$(_c, \"TodoListApp$observer\");\n$RefreshReg$(_c2, \"TodoListApp\");","map":{"version":3,"names":["React","Inputs","ColumnNames","observer","CreateList","ModalWindow","todoListState","SortingTodo","InputSearch","TodoListApp","activeTask","todos","useEffect","raw","localStorage","getItem","setTodos","JSON","parse","setItem","stringify"],"sources":["/Users/ilunya_kozyr/Desktop/TodoList/src/TodoList.jsx"],"sourcesContent":["import React from \"react\";\nimport { Inputs } from \"./components/inputs/inputs\";\nimport { ColumnNames } from \"./components/columnNames/columnNames\";\nimport { observer } from \"mobx-react-lite\";\nimport { CreateList } from \"./components/todoList/list.jsx\";\nimport { ModalWindow } from \"./components/modalWindow/modal\";\nimport todoListState from \"./store/todoListState\";\nimport SortingTodo from \"./components/sorting/sorting\";\nimport InputSearch from \"./components/search/inputSearch\";\n\nconst TodoListApp = observer(() => {\n\n    const { activeTask, todos } = todoListState;\n\n    React.useEffect (() => {\n        const raw = localStorage.getItem('todos') || []\n        setTodos(JSON.parse(raw))\n    }, [])\n\n    React.useEffect(() => {\n        localStorage.setItem(\"todos\", JSON.stringify(todos))\n    }, [todos])\n\n\n    // const [arr] = React.useState(todos);\n    // const [filtered, setFiltered] = React.useState([]);\n\n    // React.useEffect(() => {\n    //     setFiltered(arr);\n    // }, [arr]);\n\n    // const search = (val) => {\n    //     let todos = [],\n    //         newList = [];\n    //     if (val !== \"\") {\n    //         todos = arr;\n    //         newList = todos.filter((todo) => {\n    //             const lc = todo.title.toLowerCase();\n    //             const filter = val.toLowerCase();\n    //             return lc.includes(filter);\n    //         });\n    //     } else {\n    //         newList = arr;\n    //     }\n    //     setFiltered(newList);\n    // };\n\n    return (\n        <div className=\"container\">\n            <div className=\"listBlock\">\n                <Inputs />\n                <div className=\"sortSearchBlock\">\n                    <div className=\"df\">\n                        <InputSearch />\n                        {/* {...{ search }} */}\n                        <SortingTodo />\n                    </div>\n                    <ColumnNames />\n                </div>\n\n                <CreateList />\n                {/* arr={filtered} */}\n            </div>\n            <div className=\"fullDescriptionBlock\">\n                {activeTask && <ModalWindow activeTask={activeTask} />}\n            </div>\n        </div>\n    );\n});\n\nexport default TodoListApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,4BAA4B;AACnD,SAASC,WAAW,QAAQ,sCAAsC;AAClE,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,UAAU,QAAQ,gCAAgC;AAC3D,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,WAAW,MAAM,iCAAiC;AAAC;AAE1D,MAAMC,WAAW,MAAGN,QAAQ,SAAC,MAAM;EAAA;EAE/B,MAAM;IAAEO,UAAU;IAAEC;EAAM,CAAC,GAAGL,aAAa;EAE3CN,KAAK,CAACY,SAAS,CAAE,MAAM;IACnB,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;IAC/CC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACL,GAAG,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAENb,KAAK,CAACY,SAAS,CAAC,MAAM;IAClBE,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACG,SAAS,CAACT,KAAK,CAAC,CAAC;EACxD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAGX;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,wBACtB;MAAK,SAAS,EAAC,WAAW;MAAA,wBACtB,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV;QAAK,SAAS,EAAC,iBAAiB;QAAA,wBAC5B;UAAK,SAAS,EAAC,IAAI;UAAA,wBACf,QAAC,WAAW;YAAA;YAAA;YAAA;UAAA,QAAG,eAEf,QAAC,WAAW;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QACb,eACN,QAAC,WAAW;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACb,eAEN,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAEZ,eACN;MAAK,SAAS,EAAC,sBAAsB;MAAA,UAChCD,UAAU,iBAAI,QAAC,WAAW;QAAC,UAAU,EAAEA;MAAW;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACpD;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC,kCAAC;AAAC,MA1DGD,WAAW;AA4DjB,eAAeA,WAAW;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}